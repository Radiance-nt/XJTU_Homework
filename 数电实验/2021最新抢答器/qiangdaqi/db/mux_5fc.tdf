--lpm_mux CASCADE_CHAIN="IGNORE" DEVICE_FAMILY="Stratix" IGNORE_CASCADE_BUFFERS="ON" LPM_SIZE=16 LPM_WIDTH=1 LPM_WIDTHS=4 data result sel
--VERSION_BEGIN 6.0 cbx_lpm_mux 2006:01:09:11:16:16:SJ cbx_mgl 2006:04:14:11:14:36:SJ  VERSION_END


--  Copyright (C) 1991-2006 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 10 
SUBDESIGN mux_5fc
( 
	data[15..0]	:	input;
	result[0..0]	:	output;
	sel[3..0]	:	input;
) 
VARIABLE 
	result_node[0..0]	: WIRE;
	sel_ffs_wire[3..0]	: WIRE;
	sel_node[3..0]	: WIRE;
	w_data64w[3..0]	: WIRE;
	w_data65w[3..0]	: WIRE;
	w_data66w[3..0]	: WIRE;
	w_data67w[3..0]	: WIRE;
	w_data9w[15..0]	: WIRE;
	w_result112w	: WIRE;
	w_result129w	: WIRE;
	w_result145w	: WIRE;
	w_result60w	: WIRE;
	w_result61w	: WIRE;
	w_result62w	: WIRE;
	w_result63w	: WIRE;
	w_result74w	: WIRE;
	w_result95w	: WIRE;
	w_sel68w[1..0]	: WIRE;

BEGIN 
	result[] = result_node[];
	result_node[] = ( (((w_result61w & sel_node[2..2]) & (! w_result145w)) # (w_result145w & (w_result63w # (! sel_node[2..2])))));
	sel_ffs_wire[] = ( sel[3..0]);
	sel_node[] = ( sel_ffs_wire[3..2], sel[1..0]);
	w_data64w[3..0] = w_data9w[3..0];
	w_data65w[3..0] = w_data9w[7..4];
	w_data66w[3..0] = w_data9w[11..8];
	w_data67w[3..0] = w_data9w[15..12];
	w_data9w[] = ( data[15..0]);
	w_result112w = (((w_data66w[0..0] & (! w_sel68w[1..1])) & (! w_sel68w[0..0])) # (w_sel68w[1..1] & (w_sel68w[0..0] # w_data66w[2..2])));
	w_result129w = (((w_data67w[0..0] & (! w_sel68w[1..1])) & (! w_sel68w[0..0])) # (w_sel68w[1..1] & (w_sel68w[0..0] # w_data67w[2..2])));
	w_result145w = (((w_result60w & (! sel_node[3..3])) & (! sel_node[2..2])) # (sel_node[3..3] & (sel_node[2..2] # w_result62w)));
	w_result60w = (((w_data64w[1..1] & w_sel68w[0..0]) & (! w_result74w)) # (w_result74w & (w_data64w[3..3] # (! w_sel68w[0..0]))));
	w_result61w = (((w_data65w[1..1] & w_sel68w[0..0]) & (! w_result95w)) # (w_result95w & (w_data65w[3..3] # (! w_sel68w[0..0]))));
	w_result62w = (((w_data66w[1..1] & w_sel68w[0..0]) & (! w_result112w)) # (w_result112w & (w_data66w[3..3] # (! w_sel68w[0..0]))));
	w_result63w = (((w_data67w[1..1] & w_sel68w[0..0]) & (! w_result129w)) # (w_result129w & (w_data67w[3..3] # (! w_sel68w[0..0]))));
	w_result74w = (((w_data64w[0..0] & (! w_sel68w[1..1])) & (! w_sel68w[0..0])) # (w_sel68w[1..1] & (w_sel68w[0..0] # w_data64w[2..2])));
	w_result95w = (((w_data65w[0..0] & (! w_sel68w[1..1])) & (! w_sel68w[0..0])) # (w_sel68w[1..1] & (w_sel68w[0..0] # w_data65w[2..2])));
	w_sel68w[1..0] = sel_node[1..0];
END;
--VALID FILE
